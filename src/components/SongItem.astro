---

---

<script type="module">
  import { setAnimation } from "/player/modules/setAnimation.js";

  class SongItem extends HTMLElement {

    constructor() {
      super();
      this.attachShadow({ mode: "open" });
    }

    static get styles() {
      return /* css */`
        :host {
          container: songitem / inline-size;
        }

        .icon {
          scale: 0.6;
        }

        .row-item {
          display: grid;
          grid-template-columns: var(--playlist-format);
          font-family: var(--default-font);
          font-size: 1rem;
          align-items: center;
          padding: 0.25rem 0.5rem;
          border-radius: 5px;
          user-select: none;
          opacity: 0;

          @container songitem (width <= 1000px) {
            --playlist-format: 26px 1fr;

            & div:nth-child(3),
            & div:nth-child(4),
            & div:nth-child(5),
            & .icon { display: none }
          }

          & > div:nth-child(4) {
            text-align: center;
          }

          &:hover {
            background: #ffffff15;
            cursor: pointer;
          }
        }

        .title-container {
          display: flex;
          align-items: center;
          gap: 1.5rem;

          & img {
            --size: 64px;

            width: var(--size);
            height: var(--size);
            border-radius: 5px;
          }

          & .group {
            display: inline-flex;
            flex-direction: column;

            & .artist {
              color: var(--dark-textcolor);

              .row-item:hover & {
                color: #fff;
              }
            }
          }
        }
      `;
    }

    connectedCallback() {
      this.slug = this.getAttribute("slug");
      this.title = this.getAttribute("title");
      this.artist = this.getAttribute("artist");
      this.album = this.getAttribute("album");
      this.date = this.getAttribute("date");
      this.duration = this.getAttribute("duration");
      this.index = Number(this.getAttribute("index"));
      this.image = `/player/playlist/${this.album.toLowerCase()}/${this.slug}.webp`;
      this.render();
      const rowItem = this.shadowRoot.querySelector(".row-item");
      setTimeout(() => setAnimation(rowItem, "FadeMove"), this.index * 25);
    }

    getData() {
      return {
        index: this.index,
        album: this.album,
        artist: this.artist,
        date: this.date,
        duration: this.duration,
        slug: this.slug,
        title: this.title
      };
    }

    render() {
      this.shadowRoot.innerHTML = /* html */`
        <style>${SongItem.styles}</style>
        <div class="row-item" data-id=${this.index}>
          <div class="num">${this.index + 1}</div>
          <div class="title-container">
            <img src=${this.image} alt=${this.title}>
            <div class="group">
              <div>${this.title}</div>
              <div class="artist">${this.artist}</div>
            </div>
          </div>
          <div>${this.album}</div>
          <div>${this.date.substring(0, 10)}</div>
          <div>${this.duration}</div>
          <a class="icon" href="#${this.album.toLowerCase()}-${this.index+1}"><img src="/player/icons/link.svg"></a>
        </div>
      `;
    }

  }

  customElements.define("song-item", SongItem);
</script>
